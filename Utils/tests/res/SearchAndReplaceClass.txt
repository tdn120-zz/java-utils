package net.thomasnardone.utils.testtools;

import net.thomasnardone.utils.gen.SearchAndReplaceGenerator;

/**
 * Class for testing {@link SearchAndReplaceGenerator}
 * 
 * @author Thomas Nardone
 */
public class SearchAndReplaceClass {
	public static final String	CONSTANT	= "CONSTANT";

	private final String		constant	= "constant";
	private final String		constructedConstant;
	private String				field;

	public SearchAndReplaceClass() {
		constructedConstant = "constant";
	}

	public SearchAndReplaceClass(final String constructedConstant) {
		this.constructedConstant = constructedConstant;
	}

	public String getConstructedConstant() {
		return constructedConstant;
	}

	public String getField() {
		return field;
	}

	// empty method

	public void method1() {
		System.out.println("Replace failed.");
	}

	/**
	 * Just doc comments
	 */
	public void method2() {
		System.out.println("Replace failed.");
	}

	// just annotations

	@SuppressWarnings("all")
	@Deprecated
	public void method3() {
		System.out.println("Replace failed.");
	}

	// both

	/**
	 * Doc comments
	 * 
	 * @see #method3()
	 */
	@SuppressWarnings("all")
	@Deprecated
	public void method4() {
		System.out.println("Replace failed.");
	}

	/**
	 * Generated comments
	 * 
	 * Auto-generated by {@link your.Mom}
	 * @param stupidParam
	 */
	public void method5(List<String> stupidParam) {
		System.out.println("Replace failed.");
	}

	/**
	 * Generated comments with annotations
	 * 
	 * Auto-generated by {@link your.Mom}
	 * @param stupidParam
	 */
	@SuppressWarnings("all")
	public void method6(List<String> stupidParam) {
		System.out.println("Replace failed.");
	}

	/**
	 * Auto-generated by {@link your.Mom}
	 * 
	 * Generated comments with annotations
	 * @param stupidParam
	 */
	@SuppressWarnings("all")
	public void method7(List<String> stupidParam) {
		System.out.println("Replace failed.");
	}

	public void method8(String stupidlyLongMethod,
		String hasMultipleParameters, String onMultipleLines) {
		System.out.println("Replace failed.");
	}

	public void setField(final String field) {
		this.field = field;
	}

	/**
	 * Auto-generated by {@link net.thomasnardone.utils.testtools.SimpleSearchAndReplace}.
	 * 
	 * Last method, no spaces after
	 */
	@SuppressWarnings("all")
	public void method9(String stupidlyLongMethod,
		String hasMultipleParameters, String onMultipleLines) {
		System.out.printlnt("Replace failed.");
	}
}
